---
import containerSVG from "../assets/container.svg";
import { Image } from "astro:assets";
---

<section class="h-auto flex items-start relative overflow-hidden">
  <div class="flex flex-col w-full h-full max-w-screen-xl mx-auto">
    <div class="py-26 flex items-start relative">
      <div
        class="flex flex-col items-center justify-center md:items-start w-full sticky top-0 left-0 text-4xl md:text-6xl text-center font-medium text-neutral-600"
      >
        <p class="container-text">Tus productos</p>

        <p class="container-text">
          <span class="text-[#44ccd6] font-bold mr-3">favoritos</span>
          a tu alcance.
        </p>
        <small
          class="container-text text-lg text-neutral-500 font-normal mt-4 px-8 md:px-0"
        >
          Con oficinas en Estados Unidos y China para brindarte el mejor
          servicio.
        </small>
        <div class="flex flex-col items-center md:items-start mt-6 gap-4">
          <a
            href="https://sacalogistics.managercargo.com/public/web/webindex/registrocas/form/1?ag=1"
            target="_blank"
            class="flex hover:scale-105 transition duration-500 bg-[#44ccd6] shadow-sm items-center justify-center text-white rounded-full text-lg px-6 p-2 cursor-pointer z-20 container-button"
          >
            <span class="">Registrar mi casillero</span>
          </a>
        </div>
      </div>
    </div>
  </div>
  <div  class="container-ref relative justify-self-end">
    <div
      class="crane-container absolute top-0 right-1/3 w-[700px] 3xl:w-[90em] h-[50px] -z-10 opacity-60"
    >
      <Image src={containerSVG} alt="Crane" width={200} height={200} />
    </div>
  </div>
</section>
<script>
  
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const containerRef = document.querySelector(
    ".container-ref"
  ) as HTMLElement;
  const container = document.querySelector(
    ".crane-container"
  ) as HTMLElement;
  const containerText = document.querySelectorAll(
    ".container-text"
  ) as NodeListOf<HTMLElement>;

  const tl = gsap.timeline({});

  tl.to(container, {
    x: 700, // movimiento horizontal (ajusta según diseño)
    ease: "none",
    scrollTrigger: {
      trigger: container,
      start: "top bottom", // cuando el top del trigger entra al viewport
      end: "bottom top", // cuando el bottom del trigger sale del viewport
      scrub: true, // hace que la animación sea suave al hacer scroll
    },
  });

  containerText.forEach((text, index) => {
    tl.fromTo(
      text,
      {
        opacity: 0,
        y: 50,
        x: index % 2 === 0 ? -50 : 50, // alterna la dirección
      },
      {
        opacity: 1,
        y: 0,
        x: 0, // vuelve a la posición original
        duration: 1,
        ease: "power3.out",
        stagger: 0.2,
        scrollTrigger: {
          trigger: containerRef,
          start: "top center", // cuando el top del trigger entra al viewport
          end: "bottom top", // cuando el bottom del trigger sale del viewport
          scrub: true, // hace que la animación sea suave al hacer scroll
          once: true, // solo se ejecuta una vez
        },
      },
      "<"
    );
  });

  tl.fromTo(
    ".container-button",
    { opacity: 0 },
    {
      opacity: 1,
      duration: 1,
      scrollTrigger: {
        trigger: containerRef,
        start: "top bottom", // cuando el top del
        // trigger entra al viewport
        end: "bottom top", // cuando el bottom del trigger sale del viewport
        scrub: true, // hace que la animación sea suave al hacer scroll
        once: true, // solo se ejecuta una vez
      },
    },
    "<"
  );
</script>
