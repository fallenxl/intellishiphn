---
import ArrowDown from "../icons/ArrowDown.astro";
import Facebook from "../icons/Facebook.astro";
import Instagram from "../icons/Instagram.astro";
import Logo from "../icons/Logo.astro";
import Whatsapp from "../icons/Whatsapp.astro";

const links = [
  { name: "Servicios", href: "/#services" },
  { name: "Precios", href: "/#prices" },
  {name: "Catalogo", href: "/catalogo" },
  { name: "Cotizador", href: "/cotizador" },

];
const { text = "dark" } = Astro.props;
---

<header class="fixed top-0 left-0 w-full z-60 p-3">
  <nav
    class={`nav-container py-5 px-4 md:px-8 max-w-screen-xl ${text === "dark" ? "text-white" : "text-neutral-700"} mx-auto flex justify-between items-center rounded-xl transition duration-500`}
  >
    <div
      class="w-full max-w-screen-xl mx-auto flex justify-between items-center"
    >
      <div class="flex items-center gap-6">
        <a href="/" class="flex items-center gap-2">
          <Logo size={30} color="#46d9e3" />
          <h1 class="text-xl md:text-3xl font-bold nav-logo">Intelliship</h1>
        </a>
        <ul class="hidden md:flex items-center gap-5">
          {
            links.map((link) => (
              <li class="link ">
                <a href={link.href} class="  transition duration-300">
                  {link.name}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
      <div>
        <ul class="hidden md:flex items-center gap-5">
          <li class="hidden md:flex items-center gap-5">
            <a
              href="https://sacalogistics.managercargo.com/public/indexlogin/logincasillero"
              target="_blank"
            >
              Iniciar sesión
            </a>
          </li>
          <li class="hidden md:flex items-center gap-5">
            <a
              target="_blank"
              href="https://sacalogistics.managercargo.com/public/web/webindex/registrocas/form/1?ag=1"
              class="bg-[#3cb4bd] text-white flex items-center gap-2 px-4 py-2 rounded-lg transition duration-300 hover:bg-[#46d9e3]/80"
            >
              Regístrate
              <ArrowDown />
            </a>
          </li>
        </ul>
      </div>
    </div>

    <div class="link flex md:hidden">
      <button class="text-2xl transition duration-300 mov-menu-open">
        <svg
          width="30"
          height="30"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          ><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier">
            <g id="Menu / Menu_Alt_05">
              <path
                id="Vector"
                d="M5 17H13M5 12H19M11 7H19"
                stroke="#3cb4bd"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </g>
          </g></svg
        >
      </button>
    </div>
  </nav>
  <!-- movil menu -->
  <div class="fixed top-0 left-0 w-full h-dvh bg-white z-50 nav-mov-menu flex flex-col hidden">
    <div class="flex justify-between px-5 pr-10 py-10">
      <div class="flex items-center gap-2 justify-center">
        <Logo size={30} />
        <h1 class="text-3xl font-bold nav-logo text-neutral-700">
          Intelliship
        </h1>
      </div>
      <button class="text-2xl transition duration-300 mov-menu-close">
        <svg
          width="30"
          height="30"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          ><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier">
            <g id="Menu / Close_1">
              <path
                id="Vector"
                d="M6 18L18 6M6 6L18 18"
                stroke="#3cb4bd"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </g>
          </g></svg
        >
      </button>
    </div>

    <ul class="flex flex-col px-10 gap-5 mt-5 w-full">
      {
        links.map((link) => (
          <li class="link ">
            <a
              href={link.href}
              class="text-2xl transition duration-300 flex items-center gap-2 justify-between"
            >
              {link.name}
              <ArrowDown
                width="30"
                height="30"
                stroke="#3cb4bd"
                class="inline-block"
              />
            </a>
          </li>
        ))
      }
      <li class="flex items-center gap-5 w-full">
        <a
          href="https://sacalogistics.managercargo.com/public/indexlogin/logincasillero"
          target="_blank"
          class="text-2xl text-neutral-700 transition duration-300 w-full flex items-center gap-2 justify-between"
        >
          Iniciar sesión
          <ArrowDown
            width="30"
            height="30"
            stroke="#3cb4bd"
            class="inline-block"
          />
        </a>
      </li>
      <li class="flex items-center gap-5">
        <a
          target="_blank"
          href="https://sacalogistics.managercargo.com/public/web/webindex/registrocas/form/1?ag=1"
          class="text-xl bg-[#3cb4bd] mt-10 font-medium w-full text-white flex items-center justify-between gap-2 px-4 py-3 rounded-lg transition duration-300 hover:bg-[#46d9e3]/80"
        >
          Regístrate
          <ArrowDown width="30" height="30" />
        </a>
      </li>
    </ul>
  </div>
</header>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const navContainer = document.querySelector(".nav-container");
  const links = document.querySelectorAll(".link a");

  gsap.to(navContainer, {
    backgroundColor: "white",
    color: "#444444",
    boxShadow: "0 4px 10px rgba(0, 0, 0, 0.1)",
    duration: 0.2,
    scrollTrigger: {
      start: "top -10", // activarse al hacer un poco de scroll
      toggleActions: "play none none reverse", // cuando entra y sale del punto
      // "play" al entrar, "reverse" al salir
    },
  });
  gsap.to(links, {
    color: "#444444",
    duration: 0.2,
    scrollTrigger: {
      start: "top -10", // activarse al hacer un poco de scroll
      end: "bottom top",
      toggleActions: "play none none reverse",
    },
  });

  const movMenu = document.querySelector(".mov-menu-open") as HTMLButtonElement;
  const movMenuClose = document.querySelector(
    ".mov-menu-close"
  ) as HTMLButtonElement;
  const navMovMenu = document.querySelector(".nav-mov-menu") as HTMLDivElement;

  movMenu.addEventListener("click", () => {
    navMovMenu.classList.toggle("hidden");
    gsap.fromTo(
      navMovMenu,
      { opacity: 0, y: -100 },
      { opacity: 1, y: 0, duration: 0.5 }
    );
  });
  movMenuClose.addEventListener("click", () => {
    gsap.to(navMovMenu, {
      opacity: 0,
      y: -100,
      duration: 0.5,
      onComplete: () => {
        navMovMenu.classList.toggle("hidden");
        
      },
    });
  });

  const navLinks = document.querySelectorAll(".nav-mov-menu a");
  navLinks.forEach((link) => {
    link.addEventListener("click", () => {
      gsap.to(navMovMenu, {
        opacity: 0,
        y: -100,
        duration: 0.5,
        onComplete: () => {
          navMovMenu.classList.toggle("hidden");
        },
      });
    });
  });
</script>
